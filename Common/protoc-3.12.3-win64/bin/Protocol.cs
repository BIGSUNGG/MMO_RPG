// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Protocol {

  /// <summary>Holder for reflection information generated from Protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qcm90b2NvbC5wcm90bxIIUHJvdG9jb2wiYAoKUGxheWVySW5mbxIRCglT",
            "ZXNzaW9uSWQYASABKAUSCgoCSHAYAiABKAUSDQoFTW9uZXkYAyABKAUSJAoI",
            "SXRlbVNsb3QYBCADKAsyEi5Qcm90b2NvbC5JdGVtSW5mbyJMCgpPYmplY3RJ",
            "bmZvEiwKCk9iamVjdFR5cGUYASABKA4yGC5Qcm90b2NvbC5HYW1lT2JqZWN0",
            "VHlwZRIQCghPYmplY3RJZBgCIAEoBSJMCg5PYmplY3RTeW5jSW5mbxIoCgpP",
            "YmplY3RJbmZvGAEgASgLMhQuUHJvdG9jb2wuT2JqZWN0SW5mbxIQCghTeW5j",
            "SW5mbxgCIAEoDCI7CghJdGVtSW5mbxIgCgRUeXBlGAEgASgOMhIuUHJvdG9j",
            "b2wuSXRlbVR5cGUSDQoFQ291bnQYAiABKAUiDQoLU19Db25uZWN0ZWQiCAoG",
            "U19QaW5nIggKBkNfUG9uZyIrCgdDX0xvZ2luEhEKCUFjY291bnRJZBgBIAEo",
            "BRINCgVUb2tlbhgCIAEoBSI1CgdTX0xvZ2luEioKC2xvZ2luUmVzdWx0GAEg",
            "ASgOMhUuUHJvdG9jb2wuTG9naW5SZXN1bHQiGwoKU19FbnRlck1hcBINCgVt",
            "YXBJZBgBIAEoBSJGCg1TX0VudGVyUGxheWVyEhEKCVNlc3Npb25JZBgBIAEo",
            "BRIiCgRpbmZvGAIgASgLMhQuUHJvdG9jb2wuUGxheWVySW5mbyIMCgpTX0xl",
            "YXZlTWFwIiIKDVNfTGVhdmVQbGF5ZXISEQoJU2Vzc2lvbklkGAEgASgFIkIK",
            "CUdfTW92ZU1hcBIRCglNb3ZlTWFwSWQYASABKAUSIgoESW5mbxgCIAEoCzIU",
            "LlByb3RvY29sLlBsYXllckluZm8iOAoNU19TcGF3bk9iamVjdBInCglzcGF3",
            "bkluZm8YASABKAsyFC5Qcm90b2NvbC5PYmplY3RJbmZvIjoKDlNfU3Bhd25P",
            "YmplY3RzEigKCnNwYXduSW5mb3MYASADKAsyFC5Qcm90b2NvbC5PYmplY3RJ",
            "bmZvIiMKD1NfRGVzcGF3bk9iamVjdBIQCghvYmplY3RJZBgBIAEoBSIlChBT",
            "X0Rlc3Bhd25PYmplY3RzEhEKCW9iamVjdElkcxgBIAMoBSIuChNDX1JlcXVl",
            "c3RPYmplY3RJbmZvEhcKD3JlcXVlc3RPYmplY3RJZBgBIAEoBSIjCg9TX1Bv",
            "c3Nlc3NPYmplY3QSEAoIb2JqZWN0SWQYASABKAUiEwoRU19VbnBvc3Nlc3NP",
            "YmplY3QiOwoMU19PYmplY3RTeW5jEisKCVN5bmNJbmZvcxgBIAMoCzIYLlBy",
            "b3RvY29sLk9iamVjdFN5bmNJbmZvIkIKFENfUmVzcG9uc2VPYmplY3RTeW5j",
            "EioKCFN5bmNJbmZvGAEgASgLMhguUHJvdG9jb2wuT2JqZWN0U3luY0luZm8i",
            "FQoTU19SZXF1ZXN0T2JqZWN0U3luYyKPAQoTU19ScGNPYmplY3RGdW5jdGlv",
            "bhIQCghvYmplY3RJZBgBIAEoBRIYChBBYnNvbHV0ZWx5RXhjdXRlGAIgASgI",
            "EjQKDXJwY0Z1bmN0aW9uSWQYAyABKA4yHS5Qcm90b2NvbC5ScGNPYmplY3RG",
            "dW5jdGlvbklkEhYKDnBhcmFtZXRlckJ5dGVzGAQgASgMInUKE0NfUnBjT2Jq",
            "ZWN0RnVuY3Rpb24SEAoIb2JqZWN0SWQYASABKAUSNAoNcnBjRnVuY3Rpb25J",
            "ZBgCIAEoDjIdLlByb3RvY29sLlJwY09iamVjdEZ1bmN0aW9uSWQSFgoOcGFy",
            "YW1ldGVyQnl0ZXMYAyABKAwiyQEKFlNfUnBjQ29tcG9uZW50RnVuY3Rpb24S",
            "EAoIb2JqZWN0SWQYASABKAUSGAoQQWJzb2x1dGVseUV4Y3V0ZRgCIAEoCBIy",
            "Cg1jb21wb25lbnRUeXBlGAMgASgOMhsuUHJvdG9jb2wuR2FtZUNvbXBvbmVu",
            "dFR5cGUSNwoNcnBjRnVuY3Rpb25JZBgEIAEoDjIgLlByb3RvY29sLlJwY0Nv",
            "bXBvbmVudEZ1bmN0aW9uSWQSFgoOcGFyYW1ldGVyQnl0ZXMYBSABKAwirwEK",
            "FkNfUnBjQ29tcG9uZW50RnVuY3Rpb24SEAoIb2JqZWN0SWQYASABKAUSMgoN",
            "Y29tcG9uZW50VHlwZRgCIAEoDjIbLlByb3RvY29sLkdhbWVDb21wb25lbnRU",
            "eXBlEjcKDXJwY0Z1bmN0aW9uSWQYAyABKA4yIC5Qcm90b2NvbC5ScGNDb21w",
            "b25lbnRGdW5jdGlvbklkEhYKDnBhcmFtZXRlckJ5dGVzGAQgASgMIj8KE1Nf",
            "UmVxdWVzdFBsYXllckluZm8SEQoJU2Vzc2lvbklkGAEgASgFEhUKDUdhbWVB",
            "Y2NvdW50SWQYAiABKAUiUQoUR19SZXNwb25zZVBsYXllckluZm8SFQoNR2Ft",
            "ZUFjY291bnRJZBgBIAEoBRIiCgRJbmZvGAIgASgLMhQuUHJvdG9jb2wuUGxh",
            "eWVySW5mbyI3ChNHX05vdGlmeVBsYXllck1vbmV5EhEKCVNlc3Npb25JZBgB",
            "IAEoBRINCgVNb25leRgCIAEoBSIkChNTX05vdGlmeVBsYXllck1vbmV5Eg0K",
            "BU1vbmV5GAEgASgFIlwKFkdfTm90aWZ5UGxheWVySXRlbVNsb3QSEQoJU2Vz",
            "c2lvbklkGAEgASgFEg0KBUluZGV4GAIgASgFEiAKBGluZm8YAyABKAsyEi5Q",
            "cm90b2NvbC5JdGVtSW5mbyJJChZTX05vdGlmeVBsYXllckl0ZW1TbG90Eg0K",
            "BUluZGV4GAEgASgFEiAKBGluZm8YAiABKAsyEi5Qcm90b2NvbC5JdGVtSW5m",
            "byJUChlHX05vdGlmeVBsYXllckl0ZW1TbG90QWxsEhEKCVNlc3Npb25JZBgB",
            "IAEoBRIkCghJdGVtU2xvdBgCIAMoCzISLlByb3RvY29sLkl0ZW1JbmZvIkEK",
            "GVNfTm90aWZ5UGxheWVySXRlbVNsb3RBbGwSJAoISXRlbVNsb3QYASADKAsy",
            "Ei5Qcm90b2NvbC5JdGVtSW5mbyrwBQoFTXNnSWQSDwoLU19DT05ORUNURUQQ",
            "ABIKCgZTX1BJTkcQARIKCgZDX1BPTkcQAhILCgdDX0xPR0lOEAMSCwoHU19M",
            "T0dJThAEEg8KC1NfRU5URVJfTUFQEAUSEgoOU19FTlRFUl9QTEFZRVIQBhIP",
            "CgtTX0xFQVZFX01BUBAHEhIKDlNfTEVBVkVfUExBWUVSEAgSDgoKR19NT1ZF",
            "X01BUBAJEhIKDlNfU1BBV05fT0JKRUNUEAoSEwoPU19TUEFXTl9PQkpFQ1RT",
            "EAsSFAoQU19ERVNQQVdOX09CSkVDVBAMEhUKEVNfREVTUEFXTl9PQkpFQ1RT",
            "EA0SGQoVQ19SRVFVRVNUX09CSkVDVF9JTkZPEA4SFAoQU19QT1NTRVNTX09C",
            "SkVDVBAPEhYKElNfVU5QT1NTRVNTX09CSkVDVBAQEhEKDVNfT0JKRUNUX1NZ",
            "TkMQERIZChVTX1JFUVVFU1RfT0JKRUNUX1NZTkMQEhIaChZDX1JFU1BPTlNF",
            "X09CSkVDVF9TWU5DEBMSGQoVU19SUENfT0JKRUNUX0ZVTkNUSU9OEBQSGQoV",
            "Q19SUENfT0JKRUNUX0ZVTkNUSU9OEBUSHAoYU19SUENfQ09NUE9ORU5UX0ZV",
            "TkNUSU9OEBYSHAoYQ19SUENfQ09NUE9ORU5UX0ZVTkNUSU9OEBcSGQoVU19S",
            "RVFVRVNUX1BMQVlFUl9JTkZPEBgSGgoWR19SRVNQT05TRV9QTEFZRVJfSU5G",
            "TxAZEhkKFUdfTk9USUZZX1BMQVlFUl9NT05FWRAaEhkKFVNfTk9USUZZX1BM",
            "QVlFUl9NT05FWRAbEh0KGUdfTk9USUZZX1BMQVlFUl9JVEVNX1NMT1QQHBId",
            "ChlTX05PVElGWV9QTEFZRVJfSVRFTV9TTE9UEB0SIQodR19OT1RJRllfUExB",
            "WUVSX0lURU1fU0xPVF9BTEwQHhIhCh1TX05PVElGWV9QTEFZRVJfSVRFTV9T",
            "TE9UX0FMTBAfKk0KDkdhbWVPYmplY3RUeXBlEgsKB1VOS05PV04QABIRCg1L",
            "TklHSFRfUExBWUVSEAESEgoOS05JR0hUX01PTlNURVIQAhIHCgNOUEMQAyqZ",
            "AQoRR2FtZUNvbXBvbmVudFR5cGUSFAoQT0JKRUNUX0NPTVBPTkVOVBAAEiAK",
            "HENIQVJBQ1RFUl9NT1ZFTUVOVF9DT01QT05FTlQQARIdChlQTEFZRVJfTU9W",
            "RU1FTlRfQ09NUE9ORU5UEAISFAoQSEVBTFRIX0NPTVBPTkVOVBADEhcKE0lO",
            "VkVOVE9SWV9DT01QT05FTlQQBCp9ChNScGNPYmplY3RGdW5jdGlvbklkEhkK",
            "FU11bHRpY2FzdF9TZXRQb3NpdGlvbhAAEhgKFE11bHRpY2FzdF9Db21ib1N0",
            "YXJ0EAESGQoVTXVsdGljYXN0X0NvbWJvQXR0YWNrEAISFgoSTXVsdGljYXN0",
            "X0NvbWJvRW5kEAMqqwEKFlJwY0NvbXBvbmVudEZ1bmN0aW9uSWQSHAoYTXVs",
            "dGljYXN0X0RvZGdlUm9sbFN0YXJ0EAASFQoRQ2xpZW50X0dpdmVEYW1hZ2UQ",
            "ARIYChRNdWx0aWNhc3RfVGFrZURhbWFnZRACEhUKEU11bHRpY2FzdF9SZXNw",
            "YXduEAMSFwoTU2VydmVyX1B1cmNoYXNlSXRlbRAEEhIKDlNlcnZlcl9Vc2VJ",
            "dGVtEAUqNQoNQ2hhcmFjdGVyVHlwZRILCgdVbmtub3duEAASCwoHTW9uc3Rl",
            "chABEgoKBlBsYXllchACKkYKCEl0ZW1UeXBlEggKBE5vbmUQABIPCgtTbWFs",
            "bFBvdGlvbhABEhAKDE5vcm1hbFBvdGlvbhACEg0KCUJpZ1BvdGlvbhADKjQK",
            "EFBsYXllckxvZ2luU3RhdGUSEQoNTk9UX0xPR0dFRF9JThAAEg0KCUxPR0dF",
            "RF9JThABKjAKC0xvZ2luUmVzdWx0EhEKDUxPR0lOX1NVQ0NFU1MQABIOCgpM",
            "T0dJTl9GQUlMEAFCG6oCGEdvb2dsZS5Qcm90b2J1Zi5Qcm90b2NvbGIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Protobuf.Protocol.MsgId), typeof(global::Google.Protobuf.Protocol.GameObjectType), typeof(global::Google.Protobuf.Protocol.GameComponentType), typeof(global::Google.Protobuf.Protocol.RpcObjectFunctionId), typeof(global::Google.Protobuf.Protocol.RpcComponentFunctionId), typeof(global::Google.Protobuf.Protocol.CharacterType), typeof(global::Google.Protobuf.Protocol.ItemType), typeof(global::Google.Protobuf.Protocol.PlayerLoginState), typeof(global::Google.Protobuf.Protocol.LoginResult), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PlayerInfo), global::Google.Protobuf.Protocol.PlayerInfo.Parser, new[]{ "SessionId", "Hp", "Money", "ItemSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ObjectInfo), global::Google.Protobuf.Protocol.ObjectInfo.Parser, new[]{ "ObjectType", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ObjectSyncInfo), global::Google.Protobuf.Protocol.ObjectSyncInfo.Parser, new[]{ "ObjectInfo", "SyncInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ItemInfo), global::Google.Protobuf.Protocol.ItemInfo.Parser, new[]{ "Type", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Connected), global::Google.Protobuf.Protocol.S_Connected.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Ping), global::Google.Protobuf.Protocol.S_Ping.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Pong), global::Google.Protobuf.Protocol.C_Pong.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Login), global::Google.Protobuf.Protocol.C_Login.Parser, new[]{ "AccountId", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Login), global::Google.Protobuf.Protocol.S_Login.Parser, new[]{ "LoginResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterMap), global::Google.Protobuf.Protocol.S_EnterMap.Parser, new[]{ "MapId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterPlayer), global::Google.Protobuf.Protocol.S_EnterPlayer.Parser, new[]{ "SessionId", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LeaveMap), global::Google.Protobuf.Protocol.S_LeaveMap.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LeavePlayer), global::Google.Protobuf.Protocol.S_LeavePlayer.Parser, new[]{ "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.G_MoveMap), global::Google.Protobuf.Protocol.G_MoveMap.Parser, new[]{ "MoveMapId", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_SpawnObject), global::Google.Protobuf.Protocol.S_SpawnObject.Parser, new[]{ "SpawnInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_SpawnObjects), global::Google.Protobuf.Protocol.S_SpawnObjects.Parser, new[]{ "SpawnInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_DespawnObject), global::Google.Protobuf.Protocol.S_DespawnObject.Parser, new[]{ "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_DespawnObjects), global::Google.Protobuf.Protocol.S_DespawnObjects.Parser, new[]{ "ObjectIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_RequestObjectInfo), global::Google.Protobuf.Protocol.C_RequestObjectInfo.Parser, new[]{ "RequestObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_PossessObject), global::Google.Protobuf.Protocol.S_PossessObject.Parser, new[]{ "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_UnpossessObject), global::Google.Protobuf.Protocol.S_UnpossessObject.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_ObjectSync), global::Google.Protobuf.Protocol.S_ObjectSync.Parser, new[]{ "SyncInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_ResponseObjectSync), global::Google.Protobuf.Protocol.C_ResponseObjectSync.Parser, new[]{ "SyncInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_RequestObjectSync), global::Google.Protobuf.Protocol.S_RequestObjectSync.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_RpcObjectFunction), global::Google.Protobuf.Protocol.S_RpcObjectFunction.Parser, new[]{ "ObjectId", "AbsolutelyExcute", "RpcFunctionId", "ParameterBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_RpcObjectFunction), global::Google.Protobuf.Protocol.C_RpcObjectFunction.Parser, new[]{ "ObjectId", "RpcFunctionId", "ParameterBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_RpcComponentFunction), global::Google.Protobuf.Protocol.S_RpcComponentFunction.Parser, new[]{ "ObjectId", "AbsolutelyExcute", "ComponentType", "RpcFunctionId", "ParameterBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_RpcComponentFunction), global::Google.Protobuf.Protocol.C_RpcComponentFunction.Parser, new[]{ "ObjectId", "ComponentType", "RpcFunctionId", "ParameterBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_RequestPlayerInfo), global::Google.Protobuf.Protocol.S_RequestPlayerInfo.Parser, new[]{ "SessionId", "GameAccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.G_ResponsePlayerInfo), global::Google.Protobuf.Protocol.G_ResponsePlayerInfo.Parser, new[]{ "GameAccountId", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.G_NotifyPlayerMoney), global::Google.Protobuf.Protocol.G_NotifyPlayerMoney.Parser, new[]{ "SessionId", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_NotifyPlayerMoney), global::Google.Protobuf.Protocol.S_NotifyPlayerMoney.Parser, new[]{ "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.G_NotifyPlayerItemSlot), global::Google.Protobuf.Protocol.G_NotifyPlayerItemSlot.Parser, new[]{ "SessionId", "Index", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_NotifyPlayerItemSlot), global::Google.Protobuf.Protocol.S_NotifyPlayerItemSlot.Parser, new[]{ "Index", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.G_NotifyPlayerItemSlotAll), global::Google.Protobuf.Protocol.G_NotifyPlayerItemSlotAll.Parser, new[]{ "SessionId", "ItemSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_NotifyPlayerItemSlotAll), global::Google.Protobuf.Protocol.S_NotifyPlayerItemSlotAll.Parser, new[]{ "ItemSlot" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgId {
    /// <summary>
    /// Connect
    /// </summary>
    [pbr::OriginalName("S_CONNECTED")] SConnected = 0,
    /// <summary>
    /// Ping
    /// </summary>
    [pbr::OriginalName("S_PING")] SPing = 1,
    [pbr::OriginalName("C_PONG")] CPong = 2,
    /// <summary>
    /// Login
    /// </summary>
    [pbr::OriginalName("C_LOGIN")] CLogin = 3,
    [pbr::OriginalName("S_LOGIN")] SLogin = 4,
    /// <summary>
    /// Enter
    /// </summary>
    [pbr::OriginalName("S_ENTER_MAP")] SEnterMap = 5,
    [pbr::OriginalName("S_ENTER_PLAYER")] SEnterPlayer = 6,
    /// <summary>
    /// Leave
    /// </summary>
    [pbr::OriginalName("S_LEAVE_MAP")] SLeaveMap = 7,
    [pbr::OriginalName("S_LEAVE_PLAYER")] SLeavePlayer = 8,
    /// <summary>
    /// Move
    /// </summary>
    [pbr::OriginalName("G_MOVE_MAP")] GMoveMap = 9,
    /// <summary>
    /// Spawn
    /// </summary>
    [pbr::OriginalName("S_SPAWN_OBJECT")] SSpawnObject = 10,
    [pbr::OriginalName("S_SPAWN_OBJECTS")] SSpawnObjects = 11,
    [pbr::OriginalName("S_DESPAWN_OBJECT")] SDespawnObject = 12,
    [pbr::OriginalName("S_DESPAWN_OBJECTS")] SDespawnObjects = 13,
    [pbr::OriginalName("C_REQUEST_OBJECT_INFO")] CRequestObjectInfo = 14,
    /// <summary>
    /// Possess
    /// </summary>
    [pbr::OriginalName("S_POSSESS_OBJECT")] SPossessObject = 15,
    [pbr::OriginalName("S_UNPOSSESS_OBJECT")] SUnpossessObject = 16,
    /// <summary>
    /// Sync
    /// </summary>
    [pbr::OriginalName("S_OBJECT_SYNC")] SObjectSync = 17,
    [pbr::OriginalName("S_REQUEST_OBJECT_SYNC")] SRequestObjectSync = 18,
    [pbr::OriginalName("C_RESPONSE_OBJECT_SYNC")] CResponseObjectSync = 19,
    /// <summary>
    /// Rpc
    /// </summary>
    [pbr::OriginalName("S_RPC_OBJECT_FUNCTION")] SRpcObjectFunction = 20,
    [pbr::OriginalName("C_RPC_OBJECT_FUNCTION")] CRpcObjectFunction = 21,
    [pbr::OriginalName("S_RPC_COMPONENT_FUNCTION")] SRpcComponentFunction = 22,
    [pbr::OriginalName("C_RPC_COMPONENT_FUNCTION")] CRpcComponentFunction = 23,
    /// <summary>
    /// DataBase
    /// </summary>
    [pbr::OriginalName("S_REQUEST_PLAYER_INFO")] SRequestPlayerInfo = 24,
    [pbr::OriginalName("G_RESPONSE_PLAYER_INFO")] GResponsePlayerInfo = 25,
    /// <summary>
    /// Notify
    /// </summary>
    [pbr::OriginalName("G_NOTIFY_PLAYER_MONEY")] GNotifyPlayerMoney = 26,
    [pbr::OriginalName("S_NOTIFY_PLAYER_MONEY")] SNotifyPlayerMoney = 27,
    [pbr::OriginalName("G_NOTIFY_PLAYER_ITEM_SLOT")] GNotifyPlayerItemSlot = 28,
    [pbr::OriginalName("S_NOTIFY_PLAYER_ITEM_SLOT")] SNotifyPlayerItemSlot = 29,
    [pbr::OriginalName("G_NOTIFY_PLAYER_ITEM_SLOT_ALL")] GNotifyPlayerItemSlotAll = 30,
    [pbr::OriginalName("S_NOTIFY_PLAYER_ITEM_SLOT_ALL")] SNotifyPlayerItemSlotAll = 31,
  }

  /// <summary>
  /// Enums
  /// </summary>
  public enum GameObjectType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("KNIGHT_PLAYER")] KnightPlayer = 1,
    [pbr::OriginalName("KNIGHT_MONSTER")] KnightMonster = 2,
    [pbr::OriginalName("NPC")] Npc = 3,
  }

  public enum GameComponentType {
    [pbr::OriginalName("OBJECT_COMPONENT")] ObjectComponent = 0,
    [pbr::OriginalName("CHARACTER_MOVEMENT_COMPONENT")] CharacterMovementComponent = 1,
    [pbr::OriginalName("PLAYER_MOVEMENT_COMPONENT")] PlayerMovementComponent = 2,
    [pbr::OriginalName("HEALTH_COMPONENT")] HealthComponent = 3,
    [pbr::OriginalName("INVENTORY_COMPONENT")] InventoryComponent = 4,
  }

  public enum RpcObjectFunctionId {
    [pbr::OriginalName("Multicast_SetPosition")] MulticastSetPosition = 0,
    [pbr::OriginalName("Multicast_ComboStart")] MulticastComboStart = 1,
    [pbr::OriginalName("Multicast_ComboAttack")] MulticastComboAttack = 2,
    [pbr::OriginalName("Multicast_ComboEnd")] MulticastComboEnd = 3,
  }

  public enum RpcComponentFunctionId {
    [pbr::OriginalName("Multicast_DodgeRollStart")] MulticastDodgeRollStart = 0,
    [pbr::OriginalName("Client_GiveDamage")] ClientGiveDamage = 1,
    [pbr::OriginalName("Multicast_TakeDamage")] MulticastTakeDamage = 2,
    [pbr::OriginalName("Multicast_Respawn")] MulticastRespawn = 3,
    [pbr::OriginalName("Server_PurchaseItem")] ServerPurchaseItem = 4,
    [pbr::OriginalName("Server_UseItem")] ServerUseItem = 5,
  }

  public enum CharacterType {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Monster")] Monster = 1,
    [pbr::OriginalName("Player")] Player = 2,
  }

  public enum ItemType {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("SmallPotion")] SmallPotion = 1,
    [pbr::OriginalName("NormalPotion")] NormalPotion = 2,
    [pbr::OriginalName("BigPotion")] BigPotion = 3,
  }

  public enum PlayerLoginState {
    [pbr::OriginalName("NOT_LOGGED_IN")] NotLoggedIn = 0,
    [pbr::OriginalName("LOGGED_IN")] LoggedIn = 1,
  }

  public enum LoginResult {
    [pbr::OriginalName("LOGIN_SUCCESS")] LoginSuccess = 0,
    [pbr::OriginalName("LOGIN_FAIL")] LoginFail = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Structs
  /// </summary>
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      sessionId_ = other.sessionId_;
      hp_ = other.hp_;
      money_ = other.money_;
      itemSlot_ = other.itemSlot_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "Hp" field.</summary>
    public const int HpFieldNumber = 2;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "ItemSlot" field.</summary>
    public const int ItemSlotFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.ItemInfo> _repeated_itemSlot_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.Protocol.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo> itemSlot_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo> ItemSlot {
      get { return itemSlot_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Hp != other.Hp) return false;
      if (Money != other.Money) return false;
      if(!itemSlot_.Equals(other.itemSlot_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      hash ^= itemSlot_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (Hp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Hp);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      itemSlot_.WriteTo(output, _repeated_itemSlot_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      size += itemSlot_.CalculateSize(_repeated_itemSlot_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      itemSlot_.Add(other.itemSlot_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 16: {
            Hp = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
          case 34: {
            itemSlot_.AddEntriesFrom(input, _repeated_itemSlot_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectInfo : pb::IMessage<ObjectInfo> {
    private static readonly pb::MessageParser<ObjectInfo> _parser = new pb::MessageParser<ObjectInfo>(() => new ObjectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo(ObjectInfo other) : this() {
      objectType_ = other.objectType_;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInfo Clone() {
      return new ObjectInfo(this);
    }

    /// <summary>Field number for the "ObjectType" field.</summary>
    public const int ObjectTypeFieldNumber = 1;
    private global::Google.Protobuf.Protocol.GameObjectType objectType_ = global::Google.Protobuf.Protocol.GameObjectType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.GameObjectType ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "ObjectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectType != other.ObjectType) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectType != global::Google.Protobuf.Protocol.GameObjectType.Unknown) hash ^= ObjectType.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectType != global::Google.Protobuf.Protocol.GameObjectType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ObjectType);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectType != global::Google.Protobuf.Protocol.GameObjectType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObjectType);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectInfo other) {
      if (other == null) {
        return;
      }
      if (other.ObjectType != global::Google.Protobuf.Protocol.GameObjectType.Unknown) {
        ObjectType = other.ObjectType;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectType = (global::Google.Protobuf.Protocol.GameObjectType) input.ReadEnum();
            break;
          }
          case 16: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ObjectSyncInfo : pb::IMessage<ObjectSyncInfo> {
    private static readonly pb::MessageParser<ObjectSyncInfo> _parser = new pb::MessageParser<ObjectSyncInfo>(() => new ObjectSyncInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectSyncInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectSyncInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectSyncInfo(ObjectSyncInfo other) : this() {
      objectInfo_ = other.objectInfo_ != null ? other.objectInfo_.Clone() : null;
      syncInfo_ = other.syncInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectSyncInfo Clone() {
      return new ObjectSyncInfo(this);
    }

    /// <summary>Field number for the "ObjectInfo" field.</summary>
    public const int ObjectInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo objectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo ObjectInfo {
      get { return objectInfo_; }
      set {
        objectInfo_ = value;
      }
    }

    /// <summary>Field number for the "SyncInfo" field.</summary>
    public const int SyncInfoFieldNumber = 2;
    private pb::ByteString syncInfo_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SyncInfo {
      get { return syncInfo_; }
      set {
        syncInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectSyncInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectSyncInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectInfo, other.ObjectInfo)) return false;
      if (SyncInfo != other.SyncInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectInfo_ != null) hash ^= ObjectInfo.GetHashCode();
      if (SyncInfo.Length != 0) hash ^= SyncInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (objectInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectInfo);
      }
      if (SyncInfo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SyncInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectInfo);
      }
      if (SyncInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SyncInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectSyncInfo other) {
      if (other == null) {
        return;
      }
      if (other.objectInfo_ != null) {
        if (objectInfo_ == null) {
          ObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        ObjectInfo.MergeFrom(other.ObjectInfo);
      }
      if (other.SyncInfo.Length != 0) {
        SyncInfo = other.SyncInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectInfo_ == null) {
              ObjectInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(ObjectInfo);
            break;
          }
          case 18: {
            SyncInfo = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemInfo : pb::IMessage<ItemInfo> {
    private static readonly pb::MessageParser<ItemInfo> _parser = new pb::MessageParser<ItemInfo>(() => new ItemInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo(ItemInfo other) : this() {
      type_ = other.type_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo Clone() {
      return new ItemInfo(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ItemType type_ = global::Google.Protobuf.Protocol.ItemType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Protobuf.Protocol.ItemType.None) hash ^= Type.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Google.Protobuf.Protocol.ItemType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Protobuf.Protocol.ItemType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Protobuf.Protocol.ItemType.None) {
        Type = other.Type;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Protobuf.Protocol.ItemType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_CONNECTED
  /// </summary>
  public sealed partial class S_Connected : pb::IMessage<S_Connected> {
    private static readonly pb::MessageParser<S_Connected> _parser = new pb::MessageParser<S_Connected>(() => new S_Connected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Connected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Connected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Connected(S_Connected other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Connected Clone() {
      return new S_Connected(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Connected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Connected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Connected other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// S_PING
  /// </summary>
  public sealed partial class S_Ping : pb::IMessage<S_Ping> {
    private static readonly pb::MessageParser<S_Ping> _parser = new pb::MessageParser<S_Ping>(() => new S_Ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Ping(S_Ping other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Ping Clone() {
      return new S_Ping(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Ping other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// C_PONG
  /// </summary>
  public sealed partial class C_Pong : pb::IMessage<C_Pong> {
    private static readonly pb::MessageParser<C_Pong> _parser = new pb::MessageParser<C_Pong>(() => new C_Pong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Pong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Pong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Pong(C_Pong other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Pong Clone() {
      return new C_Pong(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Pong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Pong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Pong other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// C_LOGIN
  /// </summary>
  public sealed partial class C_Login : pb::IMessage<C_Login> {
    private static readonly pb::MessageParser<C_Login> _parser = new pb::MessageParser<C_Login>(() => new C_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Login(C_Login other) : this() {
      accountId_ = other.accountId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Login Clone() {
      return new C_Login(this);
    }

    /// <summary>Field number for the "AccountId" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private int accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private int token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId != 0) hash ^= AccountId.GetHashCode();
      if (Token != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AccountId);
      }
      if (Token != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountId);
      }
      if (Token != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Login other) {
      if (other == null) {
        return;
      }
      if (other.AccountId != 0) {
        AccountId = other.AccountId;
      }
      if (other.Token != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadInt32();
            break;
          }
          case 16: {
            Token = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_LOGIN  
  /// </summary>
  public sealed partial class S_Login : pb::IMessage<S_Login> {
    private static readonly pb::MessageParser<S_Login> _parser = new pb::MessageParser<S_Login>(() => new S_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Login(S_Login other) : this() {
      loginResult_ = other.loginResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Login Clone() {
      return new S_Login(this);
    }

    /// <summary>Field number for the "loginResult" field.</summary>
    public const int LoginResultFieldNumber = 1;
    private global::Google.Protobuf.Protocol.LoginResult loginResult_ = global::Google.Protobuf.Protocol.LoginResult.LoginSuccess;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.LoginResult LoginResult {
      get { return loginResult_; }
      set {
        loginResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginResult != other.LoginResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginResult != global::Google.Protobuf.Protocol.LoginResult.LoginSuccess) hash ^= LoginResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginResult != global::Google.Protobuf.Protocol.LoginResult.LoginSuccess) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LoginResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginResult != global::Google.Protobuf.Protocol.LoginResult.LoginSuccess) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Login other) {
      if (other == null) {
        return;
      }
      if (other.LoginResult != global::Google.Protobuf.Protocol.LoginResult.LoginSuccess) {
        LoginResult = other.LoginResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LoginResult = (global::Google.Protobuf.Protocol.LoginResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_ENTER_MAP
  /// </summary>
  public sealed partial class S_EnterMap : pb::IMessage<S_EnterMap> {
    private static readonly pb::MessageParser<S_EnterMap> _parser = new pb::MessageParser<S_EnterMap>(() => new S_EnterMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EnterMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterMap(S_EnterMap other) : this() {
      mapId_ = other.mapId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterMap Clone() {
      return new S_EnterMap(this);
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EnterMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EnterMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EnterMap other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_ENTER_PLAYER
  /// </summary>
  public sealed partial class S_EnterPlayer : pb::IMessage<S_EnterPlayer> {
    private static readonly pb::MessageParser<S_EnterPlayer> _parser = new pb::MessageParser<S_EnterPlayer>(() => new S_EnterPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EnterPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterPlayer(S_EnterPlayer other) : this() {
      sessionId_ = other.sessionId_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterPlayer Clone() {
      return new S_EnterPlayer(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.PlayerInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EnterPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EnterPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EnterPlayer other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_LEAVE_MAP
  /// </summary>
  public sealed partial class S_LeaveMap : pb::IMessage<S_LeaveMap> {
    private static readonly pb::MessageParser<S_LeaveMap> _parser = new pb::MessageParser<S_LeaveMap>(() => new S_LeaveMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LeaveMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveMap(S_LeaveMap other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeaveMap Clone() {
      return new S_LeaveMap(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LeaveMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LeaveMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LeaveMap other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// S_LEAVE_PLAYER
  /// </summary>
  public sealed partial class S_LeavePlayer : pb::IMessage<S_LeavePlayer> {
    private static readonly pb::MessageParser<S_LeavePlayer> _parser = new pb::MessageParser<S_LeavePlayer>(() => new S_LeavePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LeavePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeavePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeavePlayer(S_LeavePlayer other) : this() {
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeavePlayer Clone() {
      return new S_LeavePlayer(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LeavePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LeavePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LeavePlayer other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// G_MoveMap
  /// </summary>
  public sealed partial class G_MoveMap : pb::IMessage<G_MoveMap> {
    private static readonly pb::MessageParser<G_MoveMap> _parser = new pb::MessageParser<G_MoveMap>(() => new G_MoveMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<G_MoveMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_MoveMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_MoveMap(G_MoveMap other) : this() {
      moveMapId_ = other.moveMapId_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_MoveMap Clone() {
      return new G_MoveMap(this);
    }

    /// <summary>Field number for the "MoveMapId" field.</summary>
    public const int MoveMapIdFieldNumber = 1;
    private int moveMapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoveMapId {
      get { return moveMapId_; }
      set {
        moveMapId_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.PlayerInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as G_MoveMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(G_MoveMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MoveMapId != other.MoveMapId) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MoveMapId != 0) hash ^= MoveMapId.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MoveMapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MoveMapId);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MoveMapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveMapId);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(G_MoveMap other) {
      if (other == null) {
        return;
      }
      if (other.MoveMapId != 0) {
        MoveMapId = other.MoveMapId;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MoveMapId = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_SPAWN_OBJECT
  /// </summary>
  public sealed partial class S_SpawnObject : pb::IMessage<S_SpawnObject> {
    private static readonly pb::MessageParser<S_SpawnObject> _parser = new pb::MessageParser<S_SpawnObject>(() => new S_SpawnObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_SpawnObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_SpawnObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_SpawnObject(S_SpawnObject other) : this() {
      spawnInfo_ = other.spawnInfo_ != null ? other.spawnInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_SpawnObject Clone() {
      return new S_SpawnObject(this);
    }

    /// <summary>Field number for the "spawnInfo" field.</summary>
    public const int SpawnInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectInfo spawnInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectInfo SpawnInfo {
      get { return spawnInfo_; }
      set {
        spawnInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_SpawnObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_SpawnObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SpawnInfo, other.SpawnInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spawnInfo_ != null) hash ^= SpawnInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spawnInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpawnInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spawnInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpawnInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_SpawnObject other) {
      if (other == null) {
        return;
      }
      if (other.spawnInfo_ != null) {
        if (spawnInfo_ == null) {
          SpawnInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
        }
        SpawnInfo.MergeFrom(other.SpawnInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spawnInfo_ == null) {
              SpawnInfo = new global::Google.Protobuf.Protocol.ObjectInfo();
            }
            input.ReadMessage(SpawnInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_SPAWN_OBJECTS
  /// </summary>
  public sealed partial class S_SpawnObjects : pb::IMessage<S_SpawnObjects> {
    private static readonly pb::MessageParser<S_SpawnObjects> _parser = new pb::MessageParser<S_SpawnObjects>(() => new S_SpawnObjects());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_SpawnObjects> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_SpawnObjects() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_SpawnObjects(S_SpawnObjects other) : this() {
      spawnInfos_ = other.spawnInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_SpawnObjects Clone() {
      return new S_SpawnObjects(this);
    }

    /// <summary>Field number for the "spawnInfos" field.</summary>
    public const int SpawnInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.ObjectInfo> _repeated_spawnInfos_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.ObjectInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectInfo> spawnInfos_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectInfo> SpawnInfos {
      get { return spawnInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_SpawnObjects);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_SpawnObjects other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!spawnInfos_.Equals(other.spawnInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= spawnInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      spawnInfos_.WriteTo(output, _repeated_spawnInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spawnInfos_.CalculateSize(_repeated_spawnInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_SpawnObjects other) {
      if (other == null) {
        return;
      }
      spawnInfos_.Add(other.spawnInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spawnInfos_.AddEntriesFrom(input, _repeated_spawnInfos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_DESPAWN_OBJECT
  /// </summary>
  public sealed partial class S_DespawnObject : pb::IMessage<S_DespawnObject> {
    private static readonly pb::MessageParser<S_DespawnObject> _parser = new pb::MessageParser<S_DespawnObject>(() => new S_DespawnObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_DespawnObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DespawnObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DespawnObject(S_DespawnObject other) : this() {
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DespawnObject Clone() {
      return new S_DespawnObject(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_DespawnObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_DespawnObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_DespawnObject other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_DESPAWN_OBJECTS
  /// </summary>
  public sealed partial class S_DespawnObjects : pb::IMessage<S_DespawnObjects> {
    private static readonly pb::MessageParser<S_DespawnObjects> _parser = new pb::MessageParser<S_DespawnObjects>(() => new S_DespawnObjects());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_DespawnObjects> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DespawnObjects() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DespawnObjects(S_DespawnObjects other) : this() {
      objectIds_ = other.objectIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_DespawnObjects Clone() {
      return new S_DespawnObjects(this);
    }

    /// <summary>Field number for the "objectIds" field.</summary>
    public const int ObjectIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_objectIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> objectIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ObjectIds {
      get { return objectIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_DespawnObjects);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_DespawnObjects other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!objectIds_.Equals(other.objectIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= objectIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      objectIds_.WriteTo(output, _repeated_objectIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objectIds_.CalculateSize(_repeated_objectIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_DespawnObjects other) {
      if (other == null) {
        return;
      }
      objectIds_.Add(other.objectIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            objectIds_.AddEntriesFrom(input, _repeated_objectIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// C_REQUEST_OBJECT_INFO
  /// </summary>
  public sealed partial class C_RequestObjectInfo : pb::IMessage<C_RequestObjectInfo> {
    private static readonly pb::MessageParser<C_RequestObjectInfo> _parser = new pb::MessageParser<C_RequestObjectInfo>(() => new C_RequestObjectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_RequestObjectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RequestObjectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RequestObjectInfo(C_RequestObjectInfo other) : this() {
      requestObjectId_ = other.requestObjectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RequestObjectInfo Clone() {
      return new C_RequestObjectInfo(this);
    }

    /// <summary>Field number for the "requestObjectId" field.</summary>
    public const int RequestObjectIdFieldNumber = 1;
    private int requestObjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestObjectId {
      get { return requestObjectId_; }
      set {
        requestObjectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_RequestObjectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_RequestObjectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestObjectId != other.RequestObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestObjectId != 0) hash ^= RequestObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RequestObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_RequestObjectInfo other) {
      if (other == null) {
        return;
      }
      if (other.RequestObjectId != 0) {
        RequestObjectId = other.RequestObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_POSSESS_OBJECT
  /// </summary>
  public sealed partial class S_PossessObject : pb::IMessage<S_PossessObject> {
    private static readonly pb::MessageParser<S_PossessObject> _parser = new pb::MessageParser<S_PossessObject>(() => new S_PossessObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_PossessObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_PossessObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_PossessObject(S_PossessObject other) : this() {
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_PossessObject Clone() {
      return new S_PossessObject(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_PossessObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_PossessObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_PossessObject other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_UNPOSSESS_OBJECT
  /// </summary>
  public sealed partial class S_UnpossessObject : pb::IMessage<S_UnpossessObject> {
    private static readonly pb::MessageParser<S_UnpossessObject> _parser = new pb::MessageParser<S_UnpossessObject>(() => new S_UnpossessObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_UnpossessObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_UnpossessObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_UnpossessObject(S_UnpossessObject other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_UnpossessObject Clone() {
      return new S_UnpossessObject(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_UnpossessObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_UnpossessObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_UnpossessObject other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// S_OBJECT_SYNC
  /// </summary>
  public sealed partial class S_ObjectSync : pb::IMessage<S_ObjectSync> {
    private static readonly pb::MessageParser<S_ObjectSync> _parser = new pb::MessageParser<S_ObjectSync>(() => new S_ObjectSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ObjectSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ObjectSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ObjectSync(S_ObjectSync other) : this() {
      syncInfos_ = other.syncInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ObjectSync Clone() {
      return new S_ObjectSync(this);
    }

    /// <summary>Field number for the "SyncInfos" field.</summary>
    public const int SyncInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.ObjectSyncInfo> _repeated_syncInfos_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.ObjectSyncInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectSyncInfo> syncInfos_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectSyncInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.ObjectSyncInfo> SyncInfos {
      get { return syncInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ObjectSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ObjectSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!syncInfos_.Equals(other.syncInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= syncInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      syncInfos_.WriteTo(output, _repeated_syncInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += syncInfos_.CalculateSize(_repeated_syncInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ObjectSync other) {
      if (other == null) {
        return;
      }
      syncInfos_.Add(other.syncInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            syncInfos_.AddEntriesFrom(input, _repeated_syncInfos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// C_RESPONSE_OBJECT_SYNC
  /// </summary>
  public sealed partial class C_ResponseObjectSync : pb::IMessage<C_ResponseObjectSync> {
    private static readonly pb::MessageParser<C_ResponseObjectSync> _parser = new pb::MessageParser<C_ResponseObjectSync>(() => new C_ResponseObjectSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ResponseObjectSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ResponseObjectSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ResponseObjectSync(C_ResponseObjectSync other) : this() {
      syncInfo_ = other.syncInfo_ != null ? other.syncInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ResponseObjectSync Clone() {
      return new C_ResponseObjectSync(this);
    }

    /// <summary>Field number for the "SyncInfo" field.</summary>
    public const int SyncInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ObjectSyncInfo syncInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ObjectSyncInfo SyncInfo {
      get { return syncInfo_; }
      set {
        syncInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ResponseObjectSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ResponseObjectSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SyncInfo, other.SyncInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (syncInfo_ != null) hash ^= SyncInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (syncInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SyncInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (syncInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SyncInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ResponseObjectSync other) {
      if (other == null) {
        return;
      }
      if (other.syncInfo_ != null) {
        if (syncInfo_ == null) {
          SyncInfo = new global::Google.Protobuf.Protocol.ObjectSyncInfo();
        }
        SyncInfo.MergeFrom(other.SyncInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (syncInfo_ == null) {
              SyncInfo = new global::Google.Protobuf.Protocol.ObjectSyncInfo();
            }
            input.ReadMessage(SyncInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_REQUEST_OBJECT_SYNC
  /// </summary>
  public sealed partial class S_RequestObjectSync : pb::IMessage<S_RequestObjectSync> {
    private static readonly pb::MessageParser<S_RequestObjectSync> _parser = new pb::MessageParser<S_RequestObjectSync>(() => new S_RequestObjectSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_RequestObjectSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RequestObjectSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RequestObjectSync(S_RequestObjectSync other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RequestObjectSync Clone() {
      return new S_RequestObjectSync(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_RequestObjectSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_RequestObjectSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_RequestObjectSync other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// S_RPC_OBJECT_FUNCTION
  /// </summary>
  public sealed partial class S_RpcObjectFunction : pb::IMessage<S_RpcObjectFunction> {
    private static readonly pb::MessageParser<S_RpcObjectFunction> _parser = new pb::MessageParser<S_RpcObjectFunction>(() => new S_RpcObjectFunction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_RpcObjectFunction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RpcObjectFunction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RpcObjectFunction(S_RpcObjectFunction other) : this() {
      objectId_ = other.objectId_;
      absolutelyExcute_ = other.absolutelyExcute_;
      rpcFunctionId_ = other.rpcFunctionId_;
      parameterBytes_ = other.parameterBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RpcObjectFunction Clone() {
      return new S_RpcObjectFunction(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "AbsolutelyExcute" field.</summary>
    public const int AbsolutelyExcuteFieldNumber = 2;
    private bool absolutelyExcute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AbsolutelyExcute {
      get { return absolutelyExcute_; }
      set {
        absolutelyExcute_ = value;
      }
    }

    /// <summary>Field number for the "rpcFunctionId" field.</summary>
    public const int RpcFunctionIdFieldNumber = 3;
    private global::Google.Protobuf.Protocol.RpcObjectFunctionId rpcFunctionId_ = global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RpcObjectFunctionId RpcFunctionId {
      get { return rpcFunctionId_; }
      set {
        rpcFunctionId_ = value;
      }
    }

    /// <summary>Field number for the "parameterBytes" field.</summary>
    public const int ParameterBytesFieldNumber = 4;
    private pb::ByteString parameterBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ParameterBytes {
      get { return parameterBytes_; }
      set {
        parameterBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_RpcObjectFunction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_RpcObjectFunction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (AbsolutelyExcute != other.AbsolutelyExcute) return false;
      if (RpcFunctionId != other.RpcFunctionId) return false;
      if (ParameterBytes != other.ParameterBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (AbsolutelyExcute != false) hash ^= AbsolutelyExcute.GetHashCode();
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) hash ^= RpcFunctionId.GetHashCode();
      if (ParameterBytes.Length != 0) hash ^= ParameterBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (AbsolutelyExcute != false) {
        output.WriteRawTag(16);
        output.WriteBool(AbsolutelyExcute);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ParameterBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (AbsolutelyExcute != false) {
        size += 1 + 1;
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ParameterBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_RpcObjectFunction other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.AbsolutelyExcute != false) {
        AbsolutelyExcute = other.AbsolutelyExcute;
      }
      if (other.RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) {
        RpcFunctionId = other.RpcFunctionId;
      }
      if (other.ParameterBytes.Length != 0) {
        ParameterBytes = other.ParameterBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            AbsolutelyExcute = input.ReadBool();
            break;
          }
          case 24: {
            RpcFunctionId = (global::Google.Protobuf.Protocol.RpcObjectFunctionId) input.ReadEnum();
            break;
          }
          case 34: {
            ParameterBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// C_RPC_OBJECT_FUNCTION
  /// </summary>
  public sealed partial class C_RpcObjectFunction : pb::IMessage<C_RpcObjectFunction> {
    private static readonly pb::MessageParser<C_RpcObjectFunction> _parser = new pb::MessageParser<C_RpcObjectFunction>(() => new C_RpcObjectFunction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_RpcObjectFunction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RpcObjectFunction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RpcObjectFunction(C_RpcObjectFunction other) : this() {
      objectId_ = other.objectId_;
      rpcFunctionId_ = other.rpcFunctionId_;
      parameterBytes_ = other.parameterBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RpcObjectFunction Clone() {
      return new C_RpcObjectFunction(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "rpcFunctionId" field.</summary>
    public const int RpcFunctionIdFieldNumber = 2;
    private global::Google.Protobuf.Protocol.RpcObjectFunctionId rpcFunctionId_ = global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RpcObjectFunctionId RpcFunctionId {
      get { return rpcFunctionId_; }
      set {
        rpcFunctionId_ = value;
      }
    }

    /// <summary>Field number for the "parameterBytes" field.</summary>
    public const int ParameterBytesFieldNumber = 3;
    private pb::ByteString parameterBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ParameterBytes {
      get { return parameterBytes_; }
      set {
        parameterBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_RpcObjectFunction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_RpcObjectFunction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (RpcFunctionId != other.RpcFunctionId) return false;
      if (ParameterBytes != other.ParameterBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) hash ^= RpcFunctionId.GetHashCode();
      if (ParameterBytes.Length != 0) hash ^= ParameterBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ParameterBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ParameterBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_RpcObjectFunction other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.RpcFunctionId != global::Google.Protobuf.Protocol.RpcObjectFunctionId.MulticastSetPosition) {
        RpcFunctionId = other.RpcFunctionId;
      }
      if (other.ParameterBytes.Length != 0) {
        ParameterBytes = other.ParameterBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            RpcFunctionId = (global::Google.Protobuf.Protocol.RpcObjectFunctionId) input.ReadEnum();
            break;
          }
          case 26: {
            ParameterBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_RPC_COMPONENT_FUNCTION
  /// </summary>
  public sealed partial class S_RpcComponentFunction : pb::IMessage<S_RpcComponentFunction> {
    private static readonly pb::MessageParser<S_RpcComponentFunction> _parser = new pb::MessageParser<S_RpcComponentFunction>(() => new S_RpcComponentFunction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_RpcComponentFunction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RpcComponentFunction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RpcComponentFunction(S_RpcComponentFunction other) : this() {
      objectId_ = other.objectId_;
      absolutelyExcute_ = other.absolutelyExcute_;
      componentType_ = other.componentType_;
      rpcFunctionId_ = other.rpcFunctionId_;
      parameterBytes_ = other.parameterBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RpcComponentFunction Clone() {
      return new S_RpcComponentFunction(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "AbsolutelyExcute" field.</summary>
    public const int AbsolutelyExcuteFieldNumber = 2;
    private bool absolutelyExcute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AbsolutelyExcute {
      get { return absolutelyExcute_; }
      set {
        absolutelyExcute_ = value;
      }
    }

    /// <summary>Field number for the "componentType" field.</summary>
    public const int ComponentTypeFieldNumber = 3;
    private global::Google.Protobuf.Protocol.GameComponentType componentType_ = global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.GameComponentType ComponentType {
      get { return componentType_; }
      set {
        componentType_ = value;
      }
    }

    /// <summary>Field number for the "rpcFunctionId" field.</summary>
    public const int RpcFunctionIdFieldNumber = 4;
    private global::Google.Protobuf.Protocol.RpcComponentFunctionId rpcFunctionId_ = global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RpcComponentFunctionId RpcFunctionId {
      get { return rpcFunctionId_; }
      set {
        rpcFunctionId_ = value;
      }
    }

    /// <summary>Field number for the "parameterBytes" field.</summary>
    public const int ParameterBytesFieldNumber = 5;
    private pb::ByteString parameterBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ParameterBytes {
      get { return parameterBytes_; }
      set {
        parameterBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_RpcComponentFunction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_RpcComponentFunction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (AbsolutelyExcute != other.AbsolutelyExcute) return false;
      if (ComponentType != other.ComponentType) return false;
      if (RpcFunctionId != other.RpcFunctionId) return false;
      if (ParameterBytes != other.ParameterBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (AbsolutelyExcute != false) hash ^= AbsolutelyExcute.GetHashCode();
      if (ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) hash ^= ComponentType.GetHashCode();
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) hash ^= RpcFunctionId.GetHashCode();
      if (ParameterBytes.Length != 0) hash ^= ParameterBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (AbsolutelyExcute != false) {
        output.WriteRawTag(16);
        output.WriteBool(AbsolutelyExcute);
      }
      if (ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ComponentType);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ParameterBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (AbsolutelyExcute != false) {
        size += 1 + 1;
      }
      if (ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComponentType);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ParameterBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_RpcComponentFunction other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.AbsolutelyExcute != false) {
        AbsolutelyExcute = other.AbsolutelyExcute;
      }
      if (other.ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) {
        ComponentType = other.ComponentType;
      }
      if (other.RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) {
        RpcFunctionId = other.RpcFunctionId;
      }
      if (other.ParameterBytes.Length != 0) {
        ParameterBytes = other.ParameterBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            AbsolutelyExcute = input.ReadBool();
            break;
          }
          case 24: {
            ComponentType = (global::Google.Protobuf.Protocol.GameComponentType) input.ReadEnum();
            break;
          }
          case 32: {
            RpcFunctionId = (global::Google.Protobuf.Protocol.RpcComponentFunctionId) input.ReadEnum();
            break;
          }
          case 42: {
            ParameterBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// C_RPC_COMPONENT_FUNCTION
  /// </summary>
  public sealed partial class C_RpcComponentFunction : pb::IMessage<C_RpcComponentFunction> {
    private static readonly pb::MessageParser<C_RpcComponentFunction> _parser = new pb::MessageParser<C_RpcComponentFunction>(() => new C_RpcComponentFunction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_RpcComponentFunction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RpcComponentFunction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RpcComponentFunction(C_RpcComponentFunction other) : this() {
      objectId_ = other.objectId_;
      componentType_ = other.componentType_;
      rpcFunctionId_ = other.rpcFunctionId_;
      parameterBytes_ = other.parameterBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RpcComponentFunction Clone() {
      return new C_RpcComponentFunction(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private int objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "componentType" field.</summary>
    public const int ComponentTypeFieldNumber = 2;
    private global::Google.Protobuf.Protocol.GameComponentType componentType_ = global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.GameComponentType ComponentType {
      get { return componentType_; }
      set {
        componentType_ = value;
      }
    }

    /// <summary>Field number for the "rpcFunctionId" field.</summary>
    public const int RpcFunctionIdFieldNumber = 3;
    private global::Google.Protobuf.Protocol.RpcComponentFunctionId rpcFunctionId_ = global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.RpcComponentFunctionId RpcFunctionId {
      get { return rpcFunctionId_; }
      set {
        rpcFunctionId_ = value;
      }
    }

    /// <summary>Field number for the "parameterBytes" field.</summary>
    public const int ParameterBytesFieldNumber = 4;
    private pb::ByteString parameterBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ParameterBytes {
      get { return parameterBytes_; }
      set {
        parameterBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_RpcComponentFunction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_RpcComponentFunction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (ComponentType != other.ComponentType) return false;
      if (RpcFunctionId != other.RpcFunctionId) return false;
      if (ParameterBytes != other.ParameterBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) hash ^= ComponentType.GetHashCode();
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) hash ^= RpcFunctionId.GetHashCode();
      if (ParameterBytes.Length != 0) hash ^= ParameterBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ObjectId);
      }
      if (ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ComponentType);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ParameterBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectId);
      }
      if (ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComponentType);
      }
      if (RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RpcFunctionId);
      }
      if (ParameterBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ParameterBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_RpcComponentFunction other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.ComponentType != global::Google.Protobuf.Protocol.GameComponentType.ObjectComponent) {
        ComponentType = other.ComponentType;
      }
      if (other.RpcFunctionId != global::Google.Protobuf.Protocol.RpcComponentFunctionId.MulticastDodgeRollStart) {
        RpcFunctionId = other.RpcFunctionId;
      }
      if (other.ParameterBytes.Length != 0) {
        ParameterBytes = other.ParameterBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadInt32();
            break;
          }
          case 16: {
            ComponentType = (global::Google.Protobuf.Protocol.GameComponentType) input.ReadEnum();
            break;
          }
          case 24: {
            RpcFunctionId = (global::Google.Protobuf.Protocol.RpcComponentFunctionId) input.ReadEnum();
            break;
          }
          case 34: {
            ParameterBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_REQUEST_PLAYER_INFO
  /// </summary>
  public sealed partial class S_RequestPlayerInfo : pb::IMessage<S_RequestPlayerInfo> {
    private static readonly pb::MessageParser<S_RequestPlayerInfo> _parser = new pb::MessageParser<S_RequestPlayerInfo>(() => new S_RequestPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_RequestPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RequestPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RequestPlayerInfo(S_RequestPlayerInfo other) : this() {
      sessionId_ = other.sessionId_;
      gameAccountId_ = other.gameAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RequestPlayerInfo Clone() {
      return new S_RequestPlayerInfo(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "GameAccountId" field.</summary>
    public const int GameAccountIdFieldNumber = 2;
    private int gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_RequestPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_RequestPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (GameAccountId != other.GameAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (GameAccountId != 0) hash ^= GameAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (GameAccountId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (GameAccountId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_RequestPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.GameAccountId != 0) {
        GameAccountId = other.GameAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 16: {
            GameAccountId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// G_RESPONSE_PLAYER_INFO
  /// </summary>
  public sealed partial class G_ResponsePlayerInfo : pb::IMessage<G_ResponsePlayerInfo> {
    private static readonly pb::MessageParser<G_ResponsePlayerInfo> _parser = new pb::MessageParser<G_ResponsePlayerInfo>(() => new G_ResponsePlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<G_ResponsePlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_ResponsePlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_ResponsePlayerInfo(G_ResponsePlayerInfo other) : this() {
      gameAccountId_ = other.gameAccountId_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_ResponsePlayerInfo Clone() {
      return new G_ResponsePlayerInfo(this);
    }

    /// <summary>Field number for the "GameAccountId" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private int gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.PlayerInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as G_ResponsePlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(G_ResponsePlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameAccountId != other.GameAccountId) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameAccountId != 0) hash ^= GameAccountId.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameAccountId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameAccountId);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameAccountId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameAccountId);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(G_ResponsePlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.GameAccountId != 0) {
        GameAccountId = other.GameAccountId;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameAccountId = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// G_NOTIFY_PLAYER_MONEY
  /// </summary>
  public sealed partial class G_NotifyPlayerMoney : pb::IMessage<G_NotifyPlayerMoney> {
    private static readonly pb::MessageParser<G_NotifyPlayerMoney> _parser = new pb::MessageParser<G_NotifyPlayerMoney>(() => new G_NotifyPlayerMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<G_NotifyPlayerMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerMoney(G_NotifyPlayerMoney other) : this() {
      sessionId_ = other.sessionId_;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerMoney Clone() {
      return new G_NotifyPlayerMoney(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as G_NotifyPlayerMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(G_NotifyPlayerMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(G_NotifyPlayerMoney other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_NOTIFY_PLAYER_MONEY
  /// </summary>
  public sealed partial class S_NotifyPlayerMoney : pb::IMessage<S_NotifyPlayerMoney> {
    private static readonly pb::MessageParser<S_NotifyPlayerMoney> _parser = new pb::MessageParser<S_NotifyPlayerMoney>(() => new S_NotifyPlayerMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_NotifyPlayerMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerMoney(S_NotifyPlayerMoney other) : this() {
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerMoney Clone() {
      return new S_NotifyPlayerMoney(this);
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 1;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_NotifyPlayerMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_NotifyPlayerMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Money != 0) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_NotifyPlayerMoney other) {
      if (other == null) {
        return;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// G_NOTIFY_PLAYER_ITEM_SLOT
  /// </summary>
  public sealed partial class G_NotifyPlayerItemSlot : pb::IMessage<G_NotifyPlayerItemSlot> {
    private static readonly pb::MessageParser<G_NotifyPlayerItemSlot> _parser = new pb::MessageParser<G_NotifyPlayerItemSlot>(() => new G_NotifyPlayerItemSlot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<G_NotifyPlayerItemSlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerItemSlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerItemSlot(G_NotifyPlayerItemSlot other) : this() {
      sessionId_ = other.sessionId_;
      index_ = other.index_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerItemSlot Clone() {
      return new G_NotifyPlayerItemSlot(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 3;
    private global::Google.Protobuf.Protocol.ItemInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ItemInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as G_NotifyPlayerItemSlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(G_NotifyPlayerItemSlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Index != other.Index) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (info_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(G_NotifyPlayerItemSlot other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.ItemInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 26: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.ItemInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_NOTIFY_PLAYER_ITEM_SLOT
  /// </summary>
  public sealed partial class S_NotifyPlayerItemSlot : pb::IMessage<S_NotifyPlayerItemSlot> {
    private static readonly pb::MessageParser<S_NotifyPlayerItemSlot> _parser = new pb::MessageParser<S_NotifyPlayerItemSlot>(() => new S_NotifyPlayerItemSlot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_NotifyPlayerItemSlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerItemSlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerItemSlot(S_NotifyPlayerItemSlot other) : this() {
      index_ = other.index_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerItemSlot Clone() {
      return new S_NotifyPlayerItemSlot(this);
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.ItemInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ItemInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_NotifyPlayerItemSlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_NotifyPlayerItemSlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_NotifyPlayerItemSlot other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Google.Protobuf.Protocol.ItemInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Google.Protobuf.Protocol.ItemInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// G_NOTIFY_PLAYER_ITEM_SLOT_ALL
  /// </summary>
  public sealed partial class G_NotifyPlayerItemSlotAll : pb::IMessage<G_NotifyPlayerItemSlotAll> {
    private static readonly pb::MessageParser<G_NotifyPlayerItemSlotAll> _parser = new pb::MessageParser<G_NotifyPlayerItemSlotAll>(() => new G_NotifyPlayerItemSlotAll());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<G_NotifyPlayerItemSlotAll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerItemSlotAll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerItemSlotAll(G_NotifyPlayerItemSlotAll other) : this() {
      sessionId_ = other.sessionId_;
      itemSlot_ = other.itemSlot_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public G_NotifyPlayerItemSlotAll Clone() {
      return new G_NotifyPlayerItemSlotAll(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "ItemSlot" field.</summary>
    public const int ItemSlotFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.ItemInfo> _repeated_itemSlot_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Protocol.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo> itemSlot_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo> ItemSlot {
      get { return itemSlot_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as G_NotifyPlayerItemSlotAll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(G_NotifyPlayerItemSlotAll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if(!itemSlot_.Equals(other.itemSlot_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      hash ^= itemSlot_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      itemSlot_.WriteTo(output, _repeated_itemSlot_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      size += itemSlot_.CalculateSize(_repeated_itemSlot_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(G_NotifyPlayerItemSlotAll other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      itemSlot_.Add(other.itemSlot_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 18: {
            itemSlot_.AddEntriesFrom(input, _repeated_itemSlot_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// S_NOTIFY_PLAYER_ITEM_SLOT_ALL
  /// </summary>
  public sealed partial class S_NotifyPlayerItemSlotAll : pb::IMessage<S_NotifyPlayerItemSlotAll> {
    private static readonly pb::MessageParser<S_NotifyPlayerItemSlotAll> _parser = new pb::MessageParser<S_NotifyPlayerItemSlotAll>(() => new S_NotifyPlayerItemSlotAll());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_NotifyPlayerItemSlotAll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerItemSlotAll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerItemSlotAll(S_NotifyPlayerItemSlotAll other) : this() {
      itemSlot_ = other.itemSlot_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_NotifyPlayerItemSlotAll Clone() {
      return new S_NotifyPlayerItemSlotAll(this);
    }

    /// <summary>Field number for the "ItemSlot" field.</summary>
    public const int ItemSlotFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.ItemInfo> _repeated_itemSlot_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo> itemSlot_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.ItemInfo> ItemSlot {
      get { return itemSlot_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_NotifyPlayerItemSlotAll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_NotifyPlayerItemSlotAll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemSlot_.Equals(other.itemSlot_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemSlot_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemSlot_.WriteTo(output, _repeated_itemSlot_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemSlot_.CalculateSize(_repeated_itemSlot_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_NotifyPlayerItemSlotAll other) {
      if (other == null) {
        return;
      }
      itemSlot_.Add(other.itemSlot_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemSlot_.AddEntriesFrom(input, _repeated_itemSlot_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
